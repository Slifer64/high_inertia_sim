<?xml version="1.0"?>

<launch>

    <!-- <param name="robot_description" command="$(find xacro)/xacro.py '$(find project_name_)/urdf/ur5_kol_robot_description.xacro'" /> -->
    <param name="robot_obj_description" command="$(find xacro)/xacro.py '$(find project_name_)/urdf/lwr4p_obj.xacro'" />
    <param name="ur_robot_description" command="$(find xacro)/xacro.py '$(find project_name_)/urdf/ur_robot.xacro'" />

    <!-- <node name="my_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <remap from="robot_description" to="robot_obj_description" />
      <rosparam>
          rate: 50
          use_gui: true
      </rosparam>
    </node>
    <node name="my_robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <remap from="robot_description" to="robot_obj_description" />
    </node> -->

    <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find project_name_)/rviz/scene.rviz" output="screen" required="true"/>

    <node pkg="project_name_" type="project_name_" name="my_project_name_"
          output="screen" cwd="node" required="true">

        <rosparam>

          left_robot_host_ip:  "10.0.1.3" # "127.0.0.1" #
          left_robot_robot_ip: "10.0.1.1" # "127.0.0.1" #
          left_robot_reverse_port: 8081

          right_robot_host_ip: "10.0.0.3" # "127.0.0.1" #
          right_robot_robot_ip: "10.0.0.1" # "127.0.0.1" #
          right_robot_reverse_port: 8080


          ur_robot_description: "ur_robot_description"

          robot_obj_description: "robot_obj_description"

          q0: [0.5, -0.5, 0, 1.0, 0, -1.63, 0]

          mo: 20
          Jo: [1.0708, 0.2083, 1.2708]

          Ts: 0.002 # ms, time step for the simulation

          ctrl_cycle: 1 # control cycle as a multiple of Ts

          M: [0.01, 0.01, 0.01, 0.001, 0.001, 0.001]
          D: [20, 20, 20, 0.05, 0.05, 0.05]

          use_lwr_dynamics: true

          comp_load: true

          use_gui: false
          read_wrench_from_gui: false

          use_ur_robot: true

          ur_robot1_q0: [1.93, -1.05, 1.3, -1.85, -1.56, -2.78] # left robot
          ur_robot2_q0: [-1.93, -2.09, -1.3, -1.31, 1.6, -3.49] # right robot
          #ur_robot2_q0: [-1.7, -2.09, -1.3, -1.1, 1.2, -3.1] # right robot

          a_f: 0.05
          Fext_deadzone: [0.2, 0.2, 2, 0.05, 0.05, 0.05]


          SINGULARITY_THRES: 0.05
          VEL_THRES: 0.6
          ROT_VEL_THRES: 3
          POS_THRES: [0, -0.9, 0.15]

        </rosparam>

    </node>

</launch>
